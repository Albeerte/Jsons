// import * as React from "react"
// import { cva, type VariantProps } from "class-variance-authority"

// import { cn } from "@/lib/utils"

// const badgeVariants = cva(
//   "inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
//   {
//     variants: {
//       variant: {
//         default:
//           "border-transparent bg-primary text-primary-foreground hover:bg-primary/80",
//         secondary:
//           "border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",
//         destructive:
//           "border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",
//         outline: "text-foreground",
//       },
//     },
//     defaultVariants: {
//       variant: "default",
//     },
//   }
// )

// export interface BadgeProps
//   extends React.HTMLAttributes<HTMLDivElement>,
//     VariantProps<typeof badgeVariants> {}

// function Badge({ className, variant, ...props }: BadgeProps) {
//   return (
//     <div className={cn(badgeVariants({ variant }), className)} {...props} />
//   )
// }

// export { Badge, badgeVariants }

// import * as React from "react"
// import { Slot } from "@radix-ui/react-slot"
// import { cva, type VariantProps } from "class-variance-authority"

// import { cn } from "@/lib/utils"

// const buttonVariants = cva(
//   "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
//   {
//     variants: {
//       variant: {
//         default: "bg-primary text-primary-foreground hover:bg-primary/90",
//         destructive:
//           "bg-destructive text-destructive-foreground hover:bg-destructive/90",
//         outline:
//           "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
//         secondary:
//           "bg-secondary text-secondary-foreground hover:bg-secondary/80",
//         ghost: "hover:bg-accent hover:text-accent-foreground",
//         link: "text-primary underline-offset-4 hover:underline",
//       },
//       size: {
//         default: "h-10 px-4 py-2",
//         sm: "h-9 rounded-md px-3",
//         lg: "h-11 rounded-md px-8",
//         icon: "h-10 w-10",
//       },
//     },
//     defaultVariants: {
//       variant: "default",
//       size: "default",
//     },
//   }
// )

// export interface ButtonProps
//   extends React.ButtonHTMLAttributes<HTMLButtonElement>,
//     VariantProps<typeof buttonVariants> {
//   asChild?: boolean
// }

// const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
//   ({ className, variant, size, asChild = false, ...props }, ref) => {
//     const Comp = asChild ? Slot : "button"
//     return (
//       <Comp
//         className={cn(buttonVariants({ variant, size, className }))}
//         ref={ref}
//         {...props}
//       />
//     )
//   }
// )
// Button.displayName = "Button"

// export { Button, buttonVariants }
// import * as React from "react"

// import { cn } from "@/lib/utils"

// const Card = React.forwardRef<
//   HTMLDivElement,
//   React.HTMLAttributes<HTMLDivElement>
// >(({ className, ...props }, ref) => (
//   <div
//     ref={ref}
//     className={cn(
//       "rounded-lg border bg-card text-card-foreground shadow-sm",
//       className
//     )}
//     {...props}
//   />
// ))
// Card.displayName = "Card"

// const CardHeader = React.forwardRef<
//   HTMLDivElement,
//   React.HTMLAttributes<HTMLDivElement>
// >(({ className, ...props }, ref) => (
//   <div
//     ref={ref}
//     className={cn("flex flex-col space-y-1.5 p-6", className)}
//     {...props}
//   />
// ))
// CardHeader.displayName = "CardHeader"

// const CardTitle = React.forwardRef<
//   HTMLDivElement,
//   React.HTMLAttributes<HTMLDivElement>
// >(({ className, ...props }, ref) => (
//   <div
//     ref={ref}
//     className={cn(
//       "text-2xl font-semibold leading-none tracking-tight",
//       className
//     )}
//     {...props}
//   />
// ))
// CardTitle.displayName = "CardTitle"

// const CardDescription = React.forwardRef<
//   HTMLDivElement,
//   React.HTMLAttributes<HTMLDivElement>
// >(({ className, ...props }, ref) => (
//   <div
//     ref={ref}
//     className={cn("text-sm text-muted-foreground", className)}
//     {...props}
//   />
// ))
// CardDescription.displayName = "CardDescription"

// const CardContent = React.forwardRef<
//   HTMLDivElement,
//   React.HTMLAttributes<HTMLDivElement>
// >(({ className, ...props }, ref) => (
//   <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />
// ))
// CardContent.displayName = "CardContent"

// const CardFooter = React.forwardRef<
//   HTMLDivElement,
//   React.HTMLAttributes<HTMLDivElement>
// >(({ className, ...props }, ref) => (
//   <div
//     ref={ref}
//     className={cn("flex items-center p-6 pt-0", className)}
//     {...props}
//   />
// ))
// CardFooter.displayName = "CardFooter"

// export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }
// "use client"

// import * as React from "react"
// import * as DialogPrimitive from "@radix-ui/react-dialog"
// import { X } from "lucide-react"

// import { cn } from "@/lib/utils"

// const Dialog = DialogPrimitive.Root

// const DialogTrigger = DialogPrimitive.Trigger

// const DialogPortal = DialogPrimitive.Portal

// const DialogClose = DialogPrimitive.Close

// const DialogOverlay = React.forwardRef<
//   React.ElementRef<typeof DialogPrimitive.Overlay>,
//   React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>
// >(({ className, ...props }, ref) => (
//   <DialogPrimitive.Overlay
//     ref={ref}
//     className={cn(
//       "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
//       className
//     )}
//     {...props}
//   />
// ))
// DialogOverlay.displayName = DialogPrimitive.Overlay.displayName

// const DialogContent = React.forwardRef<
//   React.ElementRef<typeof DialogPrimitive.Content>,
//   React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>
// >(({ className, children, ...props }, ref) => (
//   <DialogPortal>
//     <DialogOverlay />
//     <DialogPrimitive.Content
//       ref={ref}
//       className={cn(
//         "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
//         className
//       )}
//       {...props}
//     >
//       {children}
//       <DialogPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground">
//         <X className="h-4 w-4" />
//         <span className="sr-only">Close</span>
//       </DialogPrimitive.Close>
//     </DialogPrimitive.Content>
//   </DialogPortal>
// ))
// DialogContent.displayName = DialogPrimitive.Content.displayName

// const DialogHeader = ({
//   className,
//   ...props
// }: React.HTMLAttributes<HTMLDivElement>) => (
//   <div
//     className={cn(
//       "flex flex-col space-y-1.5 text-center sm:text-left",
//       className
//     )}
//     {...props}
//   />
// )
// DialogHeader.displayName = "DialogHeader"

// const DialogFooter = ({
//   className,
//   ...props
// }: React.HTMLAttributes<HTMLDivElement>) => (
//   <div
//     className={cn(
//       "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
//       className
//     )}
//     {...props}
//   />
// )
// DialogFooter.displayName = "DialogFooter"

// const DialogTitle = React.forwardRef<
//   React.ElementRef<typeof DialogPrimitive.Title>,
//   React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>
// >(({ className, ...props }, ref) => (
//   <DialogPrimitive.Title
//     ref={ref}
//     className={cn(
//       "text-lg font-semibold leading-none tracking-tight",
//       className
//     )}
//     {...props}
//   />
// ))
// DialogTitle.displayName = DialogPrimitive.Title.displayName

// const DialogDescription = React.forwardRef<
//   React.ElementRef<typeof DialogPrimitive.Description>,
//   React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>
// >(({ className, ...props }, ref) => (
//   <DialogPrimitive.Description
//     ref={ref}
//     className={cn("text-sm text-muted-foreground", className)}
//     {...props}
//   />
// ))
// DialogDescription.displayName = DialogPrimitive.Description.displayName

// export {
//   Dialog,
//   DialogPortal,
//   DialogOverlay,
//   DialogClose,
//   DialogTrigger,
//   DialogContent,
//   DialogHeader,
//   DialogFooter,
//   DialogTitle,
//   DialogDescription,
// }
// import { cn } from "@/lib/utils"

// function Skeleton({
//   className,
//   ...props
// }: React.HTMLAttributes<HTMLDivElement>) {
//   return (
//     <div
//       className={cn("animate-pulse rounded-md bg-muted", className)}
//       {...props}
//     />
//   )
// }

// export { Skeleton }
// 'use client';

// import { cn } from "@/lib/utils";
// import React, { useEffect, useState } from "react";
// import { useTheme } from "@/context/ThemeContext";


// import {
//   SunIcon,
//   MoonIcon,
//   Half2Icon,
// } from "@radix-ui/react-icons";
// import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu";


// // Theme options
// const themes = [
//   { key: "light", label: "Light", icon: <SunIcon /> },
//   { key: "dark", label: "Dark", icon: <MoonIcon /> },
//   { key: "inherit", label: "System", icon: <Half2Icon /> },
// ];


// // Main component
// const ThemeSwitcher = () => {
//   const [preferredTheme, setPreferredTheme] = useState<string | null>(null);
//   const { theme, setTheme } = useTheme();

//   // Sync preferred theme with current theme
//   useEffect(() => {
//     setPreferredTheme(theme);
//   }, [theme]);

//   // Handle theme change
//   const handleThemeChange = (key: "inherit" | "light" | "dark") => {
//     if (setTheme) {
//       setTheme(key);
//     } else {
//       console.error("setTheme function is not available.");
//     }
//   };

//   // Get the active icon based on the current theme
//   const getCurrentThemeIcon = () => {
//     const activeTheme = themes.find(({ key }) => key === preferredTheme);
//     return activeTheme?.icon || <Half2Icon className="h-5 w-5 text-gray-700 dark:text-gray-300" />;
//   };

//   return (
//     <div className="relative inline-block text-left">
//       <DropdownMenuPrimitive.Root>
//         {/* Trigger Button */}
//         <DropdownMenuPrimitive.Trigger
//           className={cn(
//             "inline-flex select-none justify-center rounded-md px-2.5 py-2 text-sm font-medium",
//             "bg-white text-gray-900 hover:bg-gray-50 dark:bg-gray-700 dark:text-gray-100 hover:dark:bg-gray-600",
//             "border border-gray-300 dark:border-transparent",
//             "focus:outline-none focus-visible:ring focus-visible:ring-purple-500 focus-visible:ring-opacity-75"
//           )}
//           aria-label="Theme Selector"
//         >
//           {getCurrentThemeIcon()}
//         </DropdownMenuPrimitive.Trigger>

//         {/* Dropdown Content */}
//         <DropdownMenuPrimitive.Portal>
//           <DropdownMenuPrimitive.Content
//             align="end"
//             sideOffset={5}
//             className={cn(
//               "radix-side-top:animate-slide-up radix-side-bottom:animate-slide-down",
//               "w-48 rounded-lg px-1.5 py-1 shadow-md md:w-56",
//               "bg-gray-50 dark:bg-gray-700"
//             )}
//           >
//             {themes.map(({ key, label, icon }) => (
//               <DropdownMenuPrimitive.Item
//                 key={key}
//                 className={cn(
//                   "flex w-full cursor-pointer select-none items-center rounded-md px-2 py-2 text-xs outline-none",
//                   "text-gray-500 focus:bg-gray-200 dark:text-gray-400 dark:focus:bg-gray-800"
//                 )}
//                 onClick={() => handleThemeChange(key as "inherit" | "light" | "dark")}
//                 aria-label={`Switch to ${label} mode`}
//               >
//                 {React.cloneElement(icon, {
//                   className: "w-5 h-5 mr-2 text-gray-700 dark:text-gray-300",
//                 })}
//                 <span className="flex-grow text-gray-700 dark:text-gray-300">{label}</span>
//               </DropdownMenuPrimitive.Item>
//             ))}
//           </DropdownMenuPrimitive.Content>
//         </DropdownMenuPrimitive.Portal>
//       </DropdownMenuPrimitive.Root>
//     </div>
//   );
// };

// export default ThemeSwitcher;
// 'use client'
// import {
//     Card,
//     CardTitle,
//     CardHeader,
//     CardContent
// } from "@/components/ui/card";
// import ThemeSwitcher from "@/components/ui/ThemeSwitcher";
// import useMediaQuery from "@/hook/useMediaQuery";


// export const AboutMe = () => {
//     const isDesktopOrLaptop  = useMediaQuery("(min-width: 1224px)");
//     return (    

//     <Card className="mb-6">
//         <CardHeader className="flex flex-row justify-between items-baseline">
//             <CardTitle>About Me</CardTitle>
//             {isDesktopOrLaptop && <ThemeSwitcher />}
//         </CardHeader>
//         <CardContent>
//             <p className="text-muted-foreground">
//                 {/* Write 1-2 sentences about yourself */}
//                 I make and maintain high-performance web applications, sometimes telegram bots and projects of other directions using Python, SQL, Django and DRF. I have done several custom projects for various purposes, as well as implemented some of my own ideas that are still in progress. I enjoy solving complex problems and delivering quality solutions that meet the needs and expectations of the users.
//             </p>
//         </CardContent>
//     </Card>
//     )
// }
// import Image from "next/image";

// import { CalendarDays } from "lucide-react";

// import { Card, CardContent } from "@/components/ui/card";

// import { JobImages } from "@/components/JobImages";

// const jobs = [
//     {
//         role: "Backend Development", // TODO: Replace with actual role
//         company: "PDP Academy Inc.", // TODO: Replace with actual company name
//         logo: "/pdp_academy.svg", // TODO: Replace with actual logo
//         duration: "July 2023 - July 2024",
//         description:
//             "I learned web application development, teamwork, and experience in version control.",
//         link: "https://pdp.uz/offline",
//         images: [
//             "/foundation.jpg",
//         ],
//     },
// ]

// export const Education = () => {
//     return (
//         <>
//            <h2 className="text-xl font-bold mb-4 mt-3 text-black dark:text-white">Education</h2>
//             <Card>
//                 <CardContent className="pt-6">
//                     <ul className="space-y-8">
//                         {jobs.map((j, i) => (
//                             <li key={i} className="border-b last:border-b-0 pb-8 last:pb-0">
//                                 {/* Job Details */}
//                                 <div className="flex items-center space-x-4">
//                                     <Image
//                                         src={j.logo}
//                                         alt={j.company}
//                                         width={40}
//                                         height={40}
//                                         className="rounded-md border shadow-md object-cover"
//                                     />
//                                     <div>
//                                         <h3 className="font-semibold">
//                                             {j.role}
//                                         </h3>
//                                         <p className="text-sm text-muted-foreground">
//                                             {j.company}
//                                         </p>
//                                     </div>
//                                 </div>
//                                 <p className="text-xs text-muted-foreground mt-2 flex items-center">
//                                     <CalendarDays className="size-3 mr-2"/>
//                                     {j.duration}
//                                 </p>
//                                 <p className="text-sm mt-2">{j.description}</p>
//                                 {/* Job Images */}
//                                 <JobImages 
//                                     role={j.role} 
//                                     link={j.link}
//                                     images={j.images} 
//                                     duration={j.duration} 
//                                 />
//                             </li>
//                         ))}
//                     </ul>
//                 </CardContent>
//             </Card>
//         </>
//     )
// }
// import Image from "next/image";
// import Link from "next/link";

// import { CalendarDays, Linkedin } from "lucide-react";
// import { Card, CardContent } from "@/components/ui/card";
// import { JobImages } from "@/components/JobImages";

// const jobs = [
//     {
//         role: "Backend Development Intern (Python)",
//         company: "Udevs · Internship",
//         logo: "/u-devs.jpg",
//         duration: "Mar 2025 - Present · 1 mo",
//         location: "Lahore, Punjab, Pakistan - Remote",
//         description:
//             "Working on backend development tasks, improving API performance, and collaborating on remote projects.",
//         link: "https://www.linkedin.com/company/udevs-software-house/",
//         images: [],
//         extraInfo: "LinkedIn helped to get this job",
//     },
//     {
//         role: "Founder & Leader | Goldendevs",
//         company: "Goldendevs · Self-employed",
//         logo: "/golden-devs.jpg",
//         duration: "Mar 2025 - Present · 1 mo",
//         location: "Kokand, Fergana region, Uzbekistan - On-site",
//         description:
//             "Founded and lead Goldendevs, a volunteer-driven developer community that builds and launches MVP SaaS solutions. Empowering developers through hands-on projects and collaboration.",
//         skills: "Community building, Technical Leadership + 7 skills",
//         link: "https://www.linkedin.com/company/goldendevs/",
//         images: [],
//         logotwo: "/devuzcommnunity.jpg",
//         extraContent: {
//             title: "Signup for Goldendevs community",
//             link: "https://www.linkedin.com/company/goldendevs/jobs/",
//             description:
//                 "Join Goldendevs, a volunteer-driven developer community focused on launching MVP SaaS solutions and hands-on collaborations. Sign up now to join our community journey.",
//         },
//     },
// ];

// export const Experience = () => {
//     return (
//         <>
//             <h2 className="text-xl font-bold mb-4 text-black dark:text-white">Work Experience</h2>
//             <Card>
//                 <CardContent className="pt-6">
//                     <ul className="space-y-8">
//                         {jobs.map((j, i) => (
//                             <li key={i} className="border-b last:border-b-0 pb-8 last:pb-0">
//                                 {/* Job Details */}
//                                 <div className="flex items-center space-x-4">
//                                     <Link
//                                         href={j.link}
//                                         target="_blank"
//                                     >
//                                         <Image
//                                             src={j.logo}
//                                             alt={j.company}
//                                             width={40}
//                                             height={40}
//                                             className="rounded-md border shadow-md object-cover"
//                                         />
//                                     </Link>
//                                     <div>
//                                         <h3 className="font-semibold">{j.role}</h3>
//                                         <p className="text-sm text-muted-foreground">{j.company}</p>
//                                     </div>
//                                 </div>
//                                 <p className="text-xs text-muted-foreground mt-2 flex items-center">
//                                     <CalendarDays className="size-3 mr-2" />
//                                     {j.duration}
//                                 </p>
//                                 {j.location && <p className="text-xs text-muted-foreground mt-1">{j.location}</p>}
//                                 {j.extraInfo && (
//                                     <p className="text-xs text-muted-foreground mt-1 flex items-center">
//                                         <Linkedin className="size-3 mr-2" /> {j.extraInfo}
//                                     </p>
//                                 )}
//                                 <p className="text-sm mt-2">{j.description}</p>
//                                 {j.skills && <p className="text-xs text-muted-foreground mt-1">{j.skills}</p>}
//                                 {/* Job Images */}
//                                 <JobImages role={j.role} link={j.link} images={j.images} duration={j.duration} />

//                                 {/* Extra Content for Goldendevs */}
//                                 {j.extraContent && (
//                                     <div className="mt-4 flex items-center space-x-4">
//                                         {j.logotwo && (
//                                             <Link
//                                                 href={j.link}
//                                                 target="_blank"
//                                             >
//                                                 <Image
//                                                     src={j.logotwo}
//                                                     alt="Community"
//                                                     width={80}
//                                                     height={80}
//                                                     className="rounded-md border shadow-md object-cover"
//                                                 />
//                                             </Link>
//                                         )}
//                                         <div>
//                                             {j.extraContent.title && (
//                                                 <Link href={j.extraContent.link ?? "#"} target="_blank">
//                                                     <h4 className="font-bold text-black dark:text-white">
//                                                         {j.extraContent.title}
//                                                     </h4>
//                                                 </Link>
//                                             )}
//                                             {j.extraContent.description && (
//                                                 <p className="text-sm text-muted-foreground">
//                                                     {j.extraContent.description}
//                                                 </p>
//                                             )}
//                                         </div>
//                                     </div>
//                                 )}
//                             </li>
//                         ))}
//                     </ul>
//                 </CardContent>
//             </Card>
//         </>
//     );
// };
// "use client";

// import Link from "next/link";
// import Image from 'next/image';
// import { useState } from "react";

// import { ExternalLink } from "lucide-react";

// import {
//     Dialog,
//     DialogTitle,
//     DialogHeader,
//     DialogTrigger,
//     DialogContent,
//     DialogDescription
// } from "@/components/ui/dialog";


// interface JobImagesProps {
//     role: string;
//     link: string;
//     images: string[];
//     duration: string;
// }

// export const JobImages = ({
//     role,
//     link,
//     images,
//     duration
// }: JobImagesProps) => {
//     const [selectedImage, setSelectedImage] = useState<string | null>(null);

//     return (
//         <div className="mt-4 flex space-x-2 overflow-x-auto pb-2 w-full">
//             {images.map((img, idx) => (
//                 <Dialog key={idx}>
//                     <DialogTrigger asChild>
//                         <Image 
//                             src={img}
//                             width={100}
//                             height={100}
//                             alt={`Project Image for ${role}`}
//                             onClick={() => setSelectedImage(img)}
//                             className="cursor-pointer rounded-md border h-full w-auto shadow-md object-cover"
//                         />
//                     </DialogTrigger>
//                     <DialogContent>
//                         <DialogHeader>
//                             <DialogTitle>{role}</DialogTitle>
//                             <DialogDescription>
//                                 {duration}
//                             </DialogDescription>
//                         </DialogHeader>
//                         <div className="mt-4 mx-auto space-y-2">
//                             <Image 
//                                 width={400}
//                                 height={400}
//                                 src={selectedImage || ""}
//                                 alt={`Project Image for ${role}`}
//                                 className="rounded-md border shadow-md object-cover"
//                             />
//                             <Link href={link} target="_blank" className="text-sm flex items-center justify-center text-blue-600 hover:underline mt-2">
//                                 Visit Company Site
//                                 <ExternalLink className="size-4 ml-2" />
//                             </Link>
//                         </div>
//                     </DialogContent>
//                 </Dialog>
//             ))}
//         </div>
//     )
// }
// 'use client'
// import Link from "next/link";
// import Image from "next/image";
// import useMediaQuery from "@/hook/useMediaQuery";

// import { FaTelegram } from "react-icons/fa6";
// import { FaGithub, FaLinkedin } from "react-icons/fa";

// import {
//     Card,
//     CardContent
// } from "@/components/ui/card";
// import { Button } from "@/components/ui/button";
// import ThemeSwitcher from "@/components/ui/ThemeSwitcher";

// const socials = [
//     {
//         name: "Github",
//         link: "https://github.com/goldendevuz",
//         icon: <FaGithub className="size-4" />
//     },
//     {
//         name: "LinkedIn",
//         link: "https://www.linkedin.com/in/uzbekengineer",
//         icon: <FaLinkedin className="size-4" />
//     },
//     {
//         name: "Telegram",
//         link: "https://t.me/avengerdev",
//         icon: <FaTelegram className="size-4" />
//     }
//     // TODO: Add more socials here
// ]

// export const Profile = () => {
//     const isDesktopOrLaptop = useMediaQuery("(min-width: 1224px)");

//     return (
//         <Card>
//             <CardContent className="pt-6">
//                 <div className="flex flex-col items-start gap-2 ">
//                     <div className="w-full flex flex-row justify-between items-top ">
//                         <div className="flex flex-row md:flex-col items-center md:items-start w-full gap-4">
//                             <Image
//                                 width={150}
//                                 height={150}
//                                 quality={100}
//                                 src="/avatar.svg"
//                                 alt="Profile Picture"
//                                 className="rounded-full size-12 md:w-full h-auto object-cover border-2"
//                             />
//                             <div className="flex flex-col items-start justify-center">
//                                 <h1 className="font-bold md:mt-4 text-xl md:text-2xl">Yunusov Abdulmajid</h1>
//                                 <p className="text-sm md:text-base text-muted-foreground">
//                                     Python Backend Developer
//                                 </p>
//                             </div>
//                         </div>
//                         {!isDesktopOrLaptop && <ThemeSwitcher />}
//                     </div>

//                     <p className="mt-2 text-start text-sm text-muted-foreground">
//                     I am a 20 y.o Python Developer with a passion for building products that help other developers.
//                     </p>
//                     <Button className="mt-3 w-full" asChild>
//                         {/* TODO: Add resume */}
//                         {/* TODO: Add link to schedule a call with you using Calendly or Cal */}
//                         <Link
//                             href="/Profile.pdf"
//                             target="_blank"
//                             className="font-semibold uppercase"
//                         >
//                             download cv
//                         </Link>
//                     </Button>
//                     {/* <Button asChild>
//                         <Link
//                             href="https://t.me/avengerdev"
//                             // target="_blank"
//                             className="font-semibold uppercase"
//                         >
//                             CONTACT ME
//                         </Link>
//                     </Button> */}
//                     <div className="mt-4 flex flex-col space-y-2 border-t border-border pt-4 w-full">
//                         {socials.map((s, i) => {
//                             const parts = s.link.split("/");
//                             const username = parts[parts.length - 1];

//                             return (
//                                 <Link
//                                     key={i}
//                                     href={s.link}
//                                     target="_blank"
//                                     className="cursor-pointer flex items-center gap-2 group"
//                                 >
//                                     {s.icon}
//                                     <span className="text-sm text-muted-foreground group-hover:text-primary transition-color duration-200 ease-linear">
//                                         /{username}
//                                     </span>
//                                 </Link>
//                             )
//                         })}
//                     </div>
//                 </div>
//             </CardContent>
//         </Card>
//     )
// }
// import Link from "next/link";
// import { cn } from "@/lib/utils";

// import { ExternalLink } from "lucide-react";

// import { Card, CardContent } from "@/components/ui/card";

// export const projects = [
//     {
//         title: "Task Tracker",
//         description: "CLI app to track your tasks and manage your to-do list.",
//         tech: "Python",
//         link: "https://github.com/goldendevuz/task-tracker.git",
//     },
//     {
//         title: "Expense Tracker",
//         description: "simple expense tracker to manage your finances.",
//         tech: "Python",
//         link: "https://github.com/goldendevuz/expense-tracker.git",
//     },
//     {
//         title: "Number Guessing Game",
//         description: "simple number guessing game to test your luck.",
//         tech: "Python",
//         link: "https://github.com/goldendevuz/number-guessing-game.git",
//     },
//     {
//         title: "Unit Converter",
//         description: "Unit converter to convert between different units of measurement.",
//         tech: "Python",
//         link: "https://github.com/goldendevuz/unit-converter.git",
//     },
//     {
//         title: "Personal Blog",
//         description: "personal blog to write and publish articles on various topics.",
//         tech: "Python",
//         link: "https://github.com/goldendevuz/personal-blog.git",
//     },
//     // {
//     //     title: "Weather API",
//     //     description: "weather app to check the weather forecast for any location.",
//     //     tech: "Python",
//     //     link: "https://github.com/goldendevuz/weather-api-wrapper-service.git",
//     // },
//     {
//         title: "Blogging Platform API",
//         description: "RESTful API for a personal blogging platform",
//         tech: "Python",
//         link: "https://github.com/goldendevuz/blogging-platform-api.git",
//     },

//     // {
//     //     title: "Portfolio Website",
//     //     description: "simple portfolio website to showcase my projects and skills.",
//     //     tech: "React",
//     //     link: "https://github.com/goldendevuz/portfolio-website.git",
//     // },


// //     {
// //         title: "Blog API",
// //         description: "An API for a personal blog where users can create, read, update, and delete posts. Implement user authentication and basic CRUD operations.",
// //         tech: "Python",
// //         link: "#",
// //     },
// //     {
// //         title: "To-Do List API",
// //         description: "An API for a to-do list application where users can manage their tasks. Include user authentication and the ability to categorize tasks.",
// //         tech: "Python",
// //         link: "#",
// //     },
// //     {
// //         title: "E-commerce API",
// //         description: "An API for a basic e-commerce site where users can browse products, add them to a cart, and checkout. Include user authentication and order management.",
// //         tech: "Python",
// //         link: "#",
// //     },
// //     {
// //         title: "Event Management API",
// //         description: `An API for managing events, where users can create events, register for
// // events, and see a list of attendees.`,
// //         tech: "Python",
// //         link: "#",
// //     },
// //     {
// //         title: "Social Media API",
// //         description: `An API for a social media platform where users can create profiles, post
// // updates, follow other users, and like posts.`,
// //         tech: "Python",
// //         link: "#",
// //     },
// //     {
// //         title: "Online Learning Platform API",
// //         description: `n API for an online learning platform where instructors can create
// // courses, and students can enroll in and complete courses. Include progress
// // tracking and course reviews.`,
// //         tech: "Python",
// //         link: "#",
// //     },
// //     {
// //         title: "Job Board API",
// //         description: `n API for a job board where companies can post job listings, and users
// // can apply for jobs. Include user authentication and resume uploads.`,
// //         tech: "Python",
// //         link: "#",
// //     },
// //     {
// //         title: "Real-Time Chat API",
// //         description: `An API for a real-time chat application where users can join chat rooms and
// // send messages. Implement user authentication and real-time message updates.`,
// //         tech: "Python",
// //         link: "#",
// //     },
// ]

// const techColors = {
//     "React": "bg-yellow-500",
//     "React Native": "bg-green-500",
//     "Vue.js": "bg-purple-500",
//     "Python": "bg-blue-500",
// }

// export const Projects = () => {
//     return (
//         <>
//             <h2 className="text-xl font-bold mb-4">
//                 Featured Projects
//             </h2>
//             <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
//                 {projects.map((p, i) => (
//                     <Card key={i}>
//                         <CardContent className="pt-6 h-full">
//                             <div className="flex flex-col h-full">
//                                 <Link
//                                     href={p.link}
//                                     className="font-semibold text-primary hover:underline"
//                                 >
//                                     {p.title}
//                                 </Link>
//                                 <p className="text-sm text-muted-foreground mt-1 mb-4">
//                                     {p.description}
//                                 </p>
//                                 <div className="mt-auto flex items-center justify-between">
//                                     <div className="flex items-center space-x-2">
//                                         <div
//                                             className={cn(
//                                                 "size-4 rounded-full",
//                                                 techColors[p.tech as keyof typeof techColors]
//                                             )}
//                                         />
//                                         <span className="text-xs font-medium text-muted-foreground">
//                                             {p.tech}
//                                         </span>
//                                     </div>
//                                     <Link
//                                         href={p.link}
//                                         target="_blank"
//                                         className="flex items-center gap-2 text-sm text-primary hover:underline"
//                                     >
//                                         View Project
//                                         <ExternalLink className="inline-block size-3" />
//                                     </Link>
//                                 </div>
//                             </div>
//                         </CardContent>
//                     </Card>
//                 ))}
//             </div>
//         </>
//     )
// }
// import { Skills } from "./Skills";
// import { Profile } from "./Profile";


// export const Sidebar = () => {
//     return (
//         <aside className="md:col-span-1">
//             {/* Profile Section */}
//             < Profile />
//             {/* Skills Section */}
//             <Skills />
//         </aside>
//     )
// }
// import {
//   Card,
//   CardHeader,
//   CardTitle,
//   CardContent
// } from "@/components/ui/card";
// import { Badge } from "@/components/ui/badge";
// // TODO: Update skills
// const skills = ["Python", "SQL", "Django", "DRF", "Docker", "Linux"];

// export const Skills = () => {
//   return (
//       <Card className="mt-6">
//           <CardHeader>
//               <CardTitle>Skills</CardTitle>
//           </CardHeader>
//           <CardContent>
//               <div className="flex flex-wrap gap-2">
//                   {skills.map((s, i) => (
//                       <Badge key={i} variant="secondary">{s}</Badge>
//                   ))}
//               </div>
//           </CardContent>
//       </Card>
//   )
// }
// 'use client';

// import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';
// import { Theme } from "@radix-ui/themes";
// import useMediaQuery from '@/hook/useMediaQuery';

// type ThemeType = 'inherit' | 'light' | 'dark';

// interface ThemeContextType {
//     theme: ThemeType;
//     setTheme: (newTheme: ThemeType) => void;
// }

// const ThemeContext = createContext<ThemeContextType | undefined>(undefined);

// interface ThemeProviderProps {
//     children: ReactNode;
// }

// export const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {
//     const [theme, setTheme] = useState<ThemeType>('inherit');
//     const prefersDark = useMediaQuery('(prefers-color-scheme: dark)');

//     useEffect(() => {
//         const storedTheme = window.localStorage.getItem('x-theme') as ThemeType;
//         if (storedTheme && ['inherit', 'light', 'dark'].includes(storedTheme)) {
//             setTheme(storedTheme);
//         } else if (prefersDark) {
//             setTheme('dark');
//         }
//     }, [prefersDark]);

//     useEffect(() => {
//         if (theme === 'dark' || (theme === 'inherit' && prefersDark)) {
//             document.documentElement.classList.add('dark');
//         } else {
//             document.documentElement.classList.remove('dark');
//         }
//     }, [theme, prefersDark]);

//     const changeTheme = (newTheme: ThemeType) => {
//         setTheme(newTheme);
//         if (newTheme !== 'inherit') {
//             window.localStorage.setItem('x-theme', newTheme);
//         } else {
//             window.localStorage.removeItem('x-theme');
//         }
//     };

//     return (
//         <ThemeContext.Provider value={{ theme, setTheme: changeTheme }}>
//             <Theme appearance={theme}>{children}</Theme>
//         </ThemeContext.Provider>
//     );
// };

// export const useTheme = (): ThemeContextType => {
//     const context = useContext(ThemeContext);
//     if (!context) {
//         throw new Error('useTheme must be used within a ThemeProvider');
//     }
//     return context;
// };
// 'use client'
// import { useState, useEffect } from "react";

// const useMediaQuery = (query: string): boolean => {
//     const [matches, setMatches] = useState(false);

//     useEffect(() => {
//         const media = window.matchMedia(query);
//         if (media.matches !== matches) {
//             setMatches(media.matches);
//         }
//         const listener = () => setMatches(media.matches);
//         media.addEventListener("change", listener);

//         return () => media.removeEventListener("change", listener);
//     }, [query, matches]);

//     return matches;
// };

// export default useMediaQuery;

// "use client";

// import dynamic from 'next/dynamic';

// const GoogleAnalytics = dynamic(
//     () => import("@next/third-parties/google")
//         .then(mod => mod.GoogleAnalytics)
// );

// export const Analytics = () => {
//     return <GoogleAnalytics gaId={process.env.NEXT_PUBLIC_GOOGLE_ANALYTICS_ID!} />
// }


{
  "companies": [
    {
      "name": "Udevs",
      "industry": "Software Development",
      "location": "Lahore, Punjab, Pakistan",
      "size": "11-50 employees",
      "type": "Privately Held",
      "founded": 2023,
      "followers": 248,
      "description": "Udevs is a cutting-edge software development company dedicated to transforming ideas into powerful digital solutions. We specialize in building scalable, high-performance applications tailored to businesses of all sizes. With a team of skilled developers, designers, and tech strategists, we harness the latest technologies to create innovative software that drives success. At Udevs, we believe in quality, efficiency, and client-centric development, ensuring that every project we deliver meets the highest standards. Whether it's web, mobile, or enterprise software, we turn challenges into opportunities—empowering businesses to thrive in the digital age.",
      "specialties": [
        "web development",
        "mobile app development",
        "Custom Software Development",
        "E-commerce Solutions",
        "AI & Machine Learning Solutions",
        "IoT & Embedded Systems"
      ]
    },
    {
      "name": "Goldendevs",
      "industry": "Technology, Information and Internet",
      "location": "Kokand, Farg'ona Viloyati, Uzbekistan",
      "size": "1 employee",
      "type": "Self-Employed",
      "founded": 2025,
      "followers": 57,
      "description": "Goldendevs is a volunteer-driven developer community dedicated to bridging the gap between theory and practice. We offer small project ideas and MVP solutions for skill-building and real-world experience. Our online platform fosters collaboration, innovation, and open knowledge-sharing, empowering members to learn, grow, and build their portfolios in a supportive environment."
    }
  ],
  "github_projects": [
    {
      "repository": "goldendevuz/task-tracker",
      "description": "A simple solution to the Roadmap.sh Backend Beginner Project",
      "features": [
        "Add new tasks",
        "Update task descriptions",
        "Delete tasks",
        "Mark tasks as in-progress or done",
        "List all tasks or filter tasks by status (todo, in-progress, done)",
        "Tasks are stored in a `tasks.json` file"
      ],
      "tech_stack": "Python",
      "link": "https://github.com/goldendevuz/task-tracker.git"
    },
    {
      "repository": "goldendevuz/expense-tracker",
      "description": "A simple solution to the Roadmap.sh Backend Beginner Project",
      "features": [
        "Add Expenses: Quickly add new expenses with a description and amount",
        "Delete Expenses: Remove expenses by their ID",
        "List Expenses: Display all recorded expenses in a formatted table",
        "Monthly Summary: View a summary of total expenses for a specific month or all months"
      ],
      "tech_stack": "Python",
      "link": "https://github.com/goldendevuz/expense-tracker.git"
    },
    {
      "repository": "goldendevuz/number-guessing-game",
      "description": "A simple solution to the Roadmap.sh Backend Beginner Project",
      "features": [
        "Command-line interface game",
        "Guess a randomly generated number between 1 and 100",
        "Three difficulty levels: Easy (10 chances), Medium (5 chances), Hard (3 chances)",
        "Feedback on each guess (higher/lower)",
        "Option to play multiple rounds"
      ],
      "tech_stack": "Python",
      "link": "https://github.com/goldendevuz/number-guessing-game.git"
    },
    {
      "repository": "goldendevuz/unit-converter",
      "description": "A simple solution to the Roadmap.sh Backend Beginner Project",
      "tech_stack": "Python",
      "link": "https://github.com/goldendevuz/unit-converter.git"
    },
    {
      "repository": "goldendevuz/personal-blog",
      "description": "A simple solution to the Roadmap.sh Backend Beginner Project",
      "tech_stack": "Python",
      "link": "https://github.com/goldendevuz/personal-blog.git"
    }
  ],
  "personal_profile": {
    "name": "Abdulmajid Yunusov",
    "title": "Python Backend Developer at Udevs | Founder of Goldendevs | OpenSource",
    "about": "I make and maintain high-performance web applications, sometimes telegram bots and projects of other directions using Python, SQL, Django and DRF. I have done several custom projects for various purposes, as well as implemented some of my own ideas that are still in progress. I enjoy solving complex problems and delivering quality solutions that meet the needs and expectations of the users.",
    "socials": {
      "github": "https://github.com/goldendevuz",
      "linkedin": "https://www.linkedin.com/in/uzbekengineer",
      "telegram": "https://t.me/avengerdev"
    },
    "tech_stack": [
      "Python",
      "DjangoREST",
      "FastAPI",
      "Flask",
      "Jinja",
      "JWT",
      "Nginx",
      "MySQL",
      "Postgres",
      "Redis",
      "SQLite",
      "NumPy",
      "Pandas",
      "Postman",
      "Notion",
      "Swagger",
      "Trello"
    ],
    "experience": [
      {
        "role": "Backend Development Intern (Python)",
        "company": "Udevs",
        "duration": "Mar 2025 - Present",
        "location": "Lahore, Punjab, Pakistan - Remote",
        "description": "Working on backend development tasks, improving API performance, and collaborating on remote projects.",
        "link": "https://www.linkedin.com/company/udevs-software-house/"
      },
      {
        "role": "Founder & Leader",
        "company": "Goldendevs",
        "duration": "Mar 2025 - Present",
        "location": "Kokand, Fergana region, Uzbekistan - On-site",
        "description": "Founded and lead Goldendevs, a volunteer-driven developer community that builds and launches MVP SaaS solutions. Empowering developers through hands-on projects and collaboration.",
        "link": "https://www.linkedin.com/company/goldendevs/"
      }
    ],
    "education": [
      {
        "role": "Backend Development",
        "company": "PDP Academy Inc.",
        "duration": "July 2023 - July 2024",
        "description": "I learned web application development, teamwork, and experience in version control.",
        "link": "https://pdp.uz/offline"
      }
    ]
  }
}
